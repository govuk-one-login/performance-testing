AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  di-devplatform-performance

  Performance Testing Framework for Load Testing

Conditions:
  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"

Parameters:
  Environment:
    Description: "The name of the environment to deploy to"
    Type: "String"
    AllowedValues:
      - dev
      - build
      - staging
      - production
  PermissionsBoundary:
    Description: "The ARN of the permissions boundary to apply when creating IAM roles"
    Type: String
    Default: "none"
  VpcStackName:
    Type: "String"
    Description: "The name of the stack that defines the VPC to use"
    Default: "none"

Mappings:
  BTM:
    AWS:
      AccountID: "716404857987"
  SPOT:
    AWS:
      AccountID: "429671060046"
  ContraIndicators:
    AWS:
      AccountID: "755415363251"
  TxMA:
    Build:
      AccountID: "750703655225"
    Staging:
      AccountID: "178023842775"
  IPVR:
    AWS:
      AccountID: "073717171046"

Resources:
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-PerformanceServiceRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
      PermissionsBoundary:
        !If [
          UsePermissionsBoundary,
          !Ref PermissionsBoundary,
          !Ref AWS::NoValue,
        ]

  CodeBuildServicePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${AWS::StackName}-CodeBuildServicePolicy-${Environment}
      Roles:
        - !Ref CodeBuildServiceRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - logs:PutLogEvents
            Resource:
              - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*"
              - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:*"
          - Effect: "Allow"
            Action:
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:BatchGetImage"
              - "ecr:GetDownloadUrlForLayer"
            Resource:
              - !Sub "arn:${AWS::Partition}:ecr:${AWS::Region}:*:repository/*"
          - Effect: "Allow"
            Action:
              - "ecr:GetAuthorizationToken"
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - ecs:RegisterTaskDefinition
            Resource: "*"
          - Effect: Allow
            Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
            Resource: !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/${LoadTestCodeBuildProject}-*"
          - Effect: Allow
            Action:
              - iam:PassRole
              - sts:AssumeRole
            Resource: !GetAtt CodeBuildServiceRole.Arn
          - Effect: "Allow"
            Action:
              - "s3:ListAllMyBuckets"
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::*"
              - !Sub "arn:${AWS::Partition}:s3:::*/*"
            Condition:
              StringEquals:
                "s3:ResourceAccount":
                  - !Sub "${AWS::AccountId}"
          - Effect: "Allow"
            Action:
              - "s3:PutObject"
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${AWS::StackName}-test-results*"
          - Effect: "Allow"
            Action:
              - "cloudformation:DescribeStacks"
            Resource:
              - !Sub "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/*/*"
          - Effect: "Allow"
            Action:
              - "ssm:GetParameters"
              - "ssm:GetParametersByPath"
            Resource:
              - !Sub "arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/perfTest/*" #Create the parameters in AWS Systems Manager Parameter store under this path
          - Effect: "Allow"
            Action:
              - "execute-api:*"
            Resource:
              - "*"

  PerformanceTesterRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-PerformanceTesterRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: !GetAtt CodeBuildServiceRole.Arn
            Action:
              - "sts:AssumeRole"
          - Effect: "Allow"
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - "sts:AssumeRole"
            Condition:
              ArnLike:
                "aws:PrincipalArn":
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/${AWS::Region}/AWSReservedSSO_di-perf-test-prod-admin_*" # Prod Admin Control Tower Role
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/${AWS::Region}/AWSReservedSSO_AWSPowerUserAccess_*" # Prod Power User Control Tower Role
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/${AWS::Region}/AWSReservedSSO_di-perf-test-prod-testers_*" # Prod Tester Control Tower Role
      PermissionsBoundary:
        !If [
          UsePermissionsBoundary,
          !Ref PermissionsBoundary,
          !Ref AWS::NoValue,
        ]

  PerformanceTesterPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${AWS::StackName}-PerformanceTesterPolicy-${Environment}
      Roles:
        - !Ref PerformanceTesterRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: "Allow"
            Action:
              - "kms:Decrypt"
              - "kms:GenerateDataKey"
            Resource:
              - Fn::Join:
                  - ":"
                  - - !Sub "arn:${AWS::Partition}:kms:${AWS::Region}"
                    - !FindInMap [BTM, AWS, AccountID]
                    - "key/*"
              - Fn::Join:
                  - ":"
                  - - !Sub "arn:${AWS::Partition}:kms:${AWS::Region}"
                    - !FindInMap [SPOT, AWS, AccountID]
                    - "key/*"
              - Fn::Join:
                  - ":"
                  - - !Sub "arn:${AWS::Partition}:kms:${AWS::Region}"
                    - !FindInMap [TxMA, Build, AccountID]
                    - "key/*"
              - Fn::Join:
                  - ":"
                  - - !Sub "arn:${AWS::Partition}:kms:${AWS::Region}"
                    - !FindInMap [IPVR, AWS, AccountID]
                    - "key/*"
              - Fn::Join:
                  - ":"
                  - - !Sub "arn:${AWS::Partition}:kms:${AWS::Region}"
                    - !FindInMap [TxMA, Staging, AccountID]
                    - "key/*"
          - Effect: "Allow"
            Action:
              - "execute-api:*"
            Resource:
              - "*"
          - Effect: "Allow"
            Action:
              - "sqs:SendMessage"
              - "sqs:ReceiveMessage"
              - "sqs:GetQueueAttributes"
              - "sqs:DeleteMessage"
              - "sqs:ChangeMessageVisibility"
            Resource:
              - Fn::Join:
                  - ":"
                  - - !Sub "arn:${AWS::Partition}:sqs:${AWS::Region}"
                    - !FindInMap [BTM, AWS, AccountID]
                    - "di-btm-*"
              - Fn::Join:
                  - ":"
                  - - !Sub "arn:${AWS::Partition}:sqs:${AWS::Region}"
                    - !FindInMap [SPOT, AWS, AccountID]
                    - "di-ipv-spot-app-*"
              - Fn::Join:
                  - ":"
                  - - !Sub "arn:${AWS::Partition}:sqs:${AWS::Region}"
                    - !FindInMap [TxMA, Build, AccountID]
                    - "event-processing-*"
              - Fn::Join:
                  - ":"
                  - - !Sub "arn:${AWS::Partition}:sqs:${AWS::Region}"
                    - !FindInMap [IPVR, AWS, AccountID]
                    - "ipvreturn-*"
              - Fn::Join:
                  - ":"
                  - - !Sub "arn:${AWS::Partition}:sqs:${AWS::Region}"
                    - !FindInMap [TxMA, Staging, AccountID]
                    - "self-staging-*"
          - Effect: "Allow"
            Action:
              - "lambda:InvokeFunction"
            Resource:
              - Fn::Join:
                  - ":"
                  - - !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}"
                    - !FindInMap [SPOT, AWS, AccountID]
                    - "function:*"
              - Fn::Join:
                  - ":"
                  - - !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}"
                    - !FindInMap [ContraIndicators, AWS, AccountID]
                    - "function:*"
              - Fn::Join:
                  - ":"
                  - - !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}"
                    - !FindInMap [TxMA, Staging, AccountID]
                    - "function:*"

  VPCTestPolicy:
    Type: AWS::IAM::ManagedPolicy
    # checkov:skip=CKV_AWS_111:states:The mix of VPC permissions don't take a resource
    Properties:
      Roles:
        - !Ref CodeBuildServiceRole
      ManagedPolicyName:
        Fn::Join:
          - "-"
          - - !Ref AWS::StackName
            - "VPCTestPolicy"
            - Fn::Select:
                - 4
                - Fn::Split:
                    - "-"
                    - Fn::Select:
                        - 2
                        - Fn::Split:
                            - "/"
                            - Ref: AWS::StackId
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - ec2:CreateNetworkInterface
              - ec2:DescribeDhcpOptions
              - ec2:DescribeNetworkInterfaces
              - ec2:DeleteNetworkInterface
              - ec2:DescribeSubnets
              - ec2:DescribeSecurityGroups
              - ec2:DescribeVpcs
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - ec2:CreateNetworkInterfacePermission
            Resource: !Sub "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:network-interface/*"
            Condition:
              StringEquals:
                ec2:AuthorizedService: codebuild.amazonaws.com
              ArnEquals:
                ec2:Subnet:
                  - Fn::Sub:
                      - "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${SubnetId}"
                      - SubnetId:
                          Fn::ImportValue:
                            Fn::Sub: "${VpcStackName}-ProtectedSubnetIdA"
                  - Fn::Sub:
                      - "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${SubnetId}"
                      - SubnetId:
                          Fn::ImportValue:
                            Fn::Sub: "${VpcStackName}-ProtectedSubnetIdB"

  ResultsBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName:
        Fn::Join:
          - "-"
          - - Ref: AWS::StackName
            - test-results
            - Fn::Select:
                - 4
                - Fn::Split:
                    - "-"
                    - Fn::Select:
                        - 2
                        - Fn::Split:
                            - /
                            - Ref: AWS::StackId
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 365
            Status: Enabled
      LoggingConfiguration:
        LogFilePrefix: ""
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  LoadTestCodeBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: VPCTestPolicy
    Properties:
      Name: !Sub "LoadTest-${AWS::StackName}"
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: "NO_ARTIFACTS" # Needs changing to GH in build, and promote bucket in staging.
      Environment:
        ComputeType: "BUILD_GENERAL1_LARGE"
        Image: "CONTAINER-IMAGE-PLACEHOLDER" # Replace this with the ECR repo for this SAM container pipeline.
        ImagePullCredentialsType: "SERVICE_ROLE"
        Type: "LINUX_CONTAINER"
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AWS::AccountId
          - Name: S3_BUCKET
            Type: PLAINTEXT
            Value: !Ref ResultsBucket
          - Name: EXECUTION_ROLE
            Type: PLAINTEXT
            Value: !GetAtt PerformanceTesterRole.Arn
          - Name: TEST_SCRIPT
            Type: PLAINTEXT
            Value: common/test.js
          - Name: PROFILE
            Type: PLAINTEXT
            Value: smoke
          - Name: SCENARIO
            Type: PLAINTEXT
            Value: all
          - Name: ENVIRONMENT
            Type: PLAINTEXT
            Value: build
      VpcConfig:
        SecurityGroupIds:
          - !GetAtt TestContainerSecurityGroup.GroupId
        Subnets:
          - Fn::ImportValue: !Sub "${VpcStackName}-ProtectedSubnetIdA"
          - Fn::ImportValue: !Sub "${VpcStackName}-ProtectedSubnetIdB"
        VpcId:
          Fn::ImportValue: !Sub "${VpcStackName}-VpcId"
      TimeoutInMinutes: 480
      Source:
        Type: "NO_SOURCE"
        BuildSpec: |
          version: 0.2

          env:
            variables:
              DYNATRACE_ECS_ID: 305ec4d2-37de-4ac3-82b6-272371046b92
              DYNATRACE_K6_ID: 1e845440-d013-4472-9d65-2ea21a5cb41a
              JSON_RESULTS: results.gz
              OTEL_LOG: otel.log
              REPORTING_DIR: /home/k6/reporting
              SLACK_NOTIFY_CHANNEL: C05J07H48UE
              WORK_DIR: /home/k6/scripts
            parameter-store:
              ACCOUNT_APP_KEY: "/perfTest/account/accounts/appKey"
              ACCOUNT_APP_PASSWORD_NEW: "/perfTest/account/testUserNewPassword"
              ACCOUNT_APP_PASSWORD: "/perfTest/account/testUserPassword"
              ACCOUNT_BRAVO_AIS_TxMASQS: "/perfTest/account/bravo/postInterventionTxMASQS"
              ACCOUNT_BRAVO_AIS_URL: "/perfTest/account/bravo/retrieveInterventionURL"
              ACCOUNT_BRAVO_ID_REUSE_API_KEY: "/perfTest/account/bravo/idReuseApiKey"
              ACCOUNT_BRAVO_ID_REUSE_API_KEY_SUMMARISE: "/perfTest/account/bravo/idReuseApiKeySummarise"
              ACCOUNT_BRAVO_ID_REUSE_MOCK: "/perfTest/account/bravo/idReuseMock"
              ACCOUNT_BRAVO_ID_REUSE_URL: "/perfTest/account/bravo/idReuseUrl"
              ACCOUNT_CURR_PHONE: "/perfTest/account/accounts/currPhone"
              ACCOUNT_EMAIL_OTP: "/perfTest/account/fixedEmailOTP"
              ACCOUNT_HOME_URL: "/perfTest/account/accounts/homeUrl"
              ACCOUNT_NEW_PHONE: "/perfTest/account/accounts/newPhone"
              ACCOUNT_PHONE_OTP: "/perfTest/account/fixedPhoneOTP"
              ACCOUNT_ORCH_STUB: "/perfTest/account/authentication/orchStub"
              ACCOUNT_RP_STUB: "/perfTest/account/authentication/rpStub"
              ACCOUNT_SIGNIN_URL: "/perfTest/account/accounts/signInUrl"
              ACCOUNT_STAGING_URL: "/perfTest/account/authentication/baseUrl"
              DATA_BTM_SQS: "/perfTest/data/btm/perfSQS"
              DATA_BTM_SQS_PAYLOAD_EVENTS: "/perfTest/data/txma/SQSPayloadEvents"
              DATA_TXMA_SQS: "/perfTest/data/txma/perfSQS"
              DEMO_NODE_ENDPOINT: "/perfTest/demo/nodeEndpoint"
              DEMO_SAM_ENDPOINT: "/perfTest/demo/samEndpoint"
              DYNATRACE_APITOKEN: "/perfTest/dynatraceApiToken"
              DYNATRACE_URL: "/perfTest/dynatraceUrl"
              FRAUD_CLIENT_ID: "/perfTest/fraud/clientID"
              FRAUD_CLIENT_SECRET: "/perfTest/fraud/clientSecret"
              FRAUD_COGNITO_URL: "/perfTest/fraud/cognitoURL"
              FRAUD_PAYLOAD: "/perfTest/fraud/fraudPayload"
              FRAUD_SSF_INBOUND_URL: "/perfTest/fraud/SSFInboundURL"
              IDENTITY_ADDRESS_URL: "/perfTest/identity/orange/addressUrl"
              IDENTITY_BUILD_CORE_URL: "/perfTest/identity/build/coreUrl"
              IDENTITY_BUILD_CORE_VTR_TEXT: "/perfTest/identity/build/coreVtrText"
              IDENTITY_BUILD_ORCH_STUB_URL: "/perfTest/identity/build/orchStubUrl"
              IDENTITY_BUILD_OTG_URL: "/perfTest/identity/orange/OTGUrlBuild"
              IDENTITY_CIMIT_GETCIC: "/perfTest/identity/cimit/getcic"
              IDENTITY_CIMIT_POSTMITIGATION: "/perfTest/identity/cimit/postmitigation"
              IDENTITY_CIMIT_PUTCI: "/perfTest/identity/cimit/putci"
              IDENTITY_CORE_STUB_PASSWORD: "/perfTest/identity/coreStubPassword"
              IDENTITY_CORE_STUB_URL: "/perfTest/identity/coreStubUrl"
              IDENTITY_CORE_STUB_USERNAME: "/perfTest/identity/coreStubUsername"
              IDENTITY_DEV_CORE_URL: "/perfTest/identity/dev/coreUrl"
              IDENTITY_DEV_ORCH_STUB_URL: "/perfTest/identity/dev/orchStubUrl"
              IDENTITY_DRIVING_URL: "/perfTest/identity/lime/drivingUrl"
              IDENTITY_FRAUD_URL: "/perfTest/identity/lime/fraudUrl"
              IDENTITY_KBV_ANSWERS: "/perfTest/identity/orange/kbvAnswers"
              IDENTITY_KBV_URL: "/perfTest/identity/orange/kbvUrl"
              IDENTITY_KIWI_BAV_STUB_URL: "/perfTest/identity/kiwi/bav/stubUrl"
              IDENTITY_KIWI_BAV_TARGET: "/perfTest/identity/kiwi/bav/target"
              IDENTITY_KIWI_CIC_STUB_URL: "/perfTest/identity/kiwi/cic/stubUrl"
              IDENTITY_KIWI_CIC_TARGET: "/perfTest/identity/kiwi/cic/target"
              IDENTITY_KIWI_F2F_STUB_URL: "/perfTest/identity/kiwi/f2f/stubUrl"
              IDENTITY_KIWI_F2F_TARGET: "/perfTest/identity/kiwi/f2f/target"
              IDENTITY_KIWI_STUB_SQS: "/perfTest/identity/kiwi/stubTxMAConsumer"
              IDENTITY_ORCH_STUB_PASSWORD: "/perfTest/identity/orchStubPassword"
              IDENTITY_ORCH_STUB_USERNAME: "/perfTest/identity/orchStubUsername"
              IDENTITY_PASSPORT_URL: "/perfTest/identity/lime/passportUrl"
              IDENTITY_SPOT_SQS: "/perfTest/identity/spot/SQS"
              MOBILE_BUILD_BACKEND_URL: "/perfTest/mobile/build/backendUrl"
              MOBILE_BUILD_FRONTEND_URL: "/perfTest/mobile/build/frontendUrl"
              MOBILE_BUILD_TEST_CLIENT_URL: "/perfTest/mobile/build/testClientUrl"
              MOBILE_DEV_BACKEND_URL: "/perfTest/mobile/dev/backendUrl"
              MOBILE_DEV_FRONTEND_URL: "/perfTest/mobile/dev/frontendUrl"
              MOBILE_DEV_TEST_CLIENT_URL: "/perfTest/mobile/dev/testClientUrl"
              SLACK_OAUTH_TOKEN: "/perfTest/slack/OAuthToken"
          phases:
            pre_build:
              commands:
                - |
                  sed -e "s#{URL}#$DYNATRACE_URL#" -e "s#{APITOKEN}#$DYNATRACE_APITOKEN#" -e "s#{ID}#$CODEBUILD_BUILD_NUMBER#" $OTEL_TEMPLATE > $OTEL_CONFIG
                - /otel/otelcol-contrib  --config=$OTEL_CONFIG > $OTEL_LOG 2>&1 &
                - export EXECUTION_CREDENTIALS=$(aws sts assume-role --role-arn $EXECUTION_ROLE --role-session-name $CODEBUILD_BUILD_NUMBER)
                - source ${REPORTING_DIR}/slack.sh POST
            build:
              commands:
                - echo "Run performance test"
                - k6 run $WORK_DIR/$TEST_SCRIPT --tag script=$TEST_SCRIPT --tag account_id=$AWS_ACCOUNT_ID --out output-statsd --out json=$JSON_RESULTS
            post_build:
              commands:
                - echo "Uploading test results to s3"
                - S3_LOCATION=s3://${S3_BUCKET}/${TEST_SCRIPT%.*}/$(date +%F/%T)
                - aws s3 cp $K6_WEB_DASHBOARD_EXPORT $S3_LOCATION/$K6_WEB_DASHBOARD_EXPORT
                - aws s3 cp $JSON_RESULTS $S3_LOCATION/$JSON_RESULTS
                - aws s3 cp $OTEL_LOG $S3_LOCATION/$OTEL_LOG
                - echo "Shutting down OpenTelemetry collector"
                - sleep 120
                - OTEL_PID=$(pgrep /otel/otelcol-contrib)
                - kill $OTEL_PID
                - TIMEOUT=0
                - while kill -0 $OTEL_PID && (( TIMEOUT < 300 )); do sleep 1; (( TIMEOUT++ )); done
                - source ${REPORTING_DIR}/slack.sh UPDATE
                - echo "Performance test complete"

      Tags:
        - Key: "Name"
          Value: !Join
            - "-"
            - - !Ref AWS::StackName
              - "LoadTestCodeBuildProject"
        - Key: "Service"
          Value: "ci/cd"
        - Key: "Source"
          Value: "govuk-one-login/performance-testing"

  TestContainerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: >-
        Permits unrestricted outbound on 443 to allow the testcontainer to access VPC endpoints and outbound over SSL.
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow to the wider internet on port 443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      VpcId:
        Fn::ImportValue: !Sub "${VpcStackName}-VpcId"

Outputs:
  PerformanceRoleArn:
    Description: "The RoleArn for performance testers to trigger CodeBuild tests."
    Value: !Ref CodeBuildServiceRole
